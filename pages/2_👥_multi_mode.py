import streamlit as st

from chatbot import AssistantChatbot, PhilosopherChatbot
from utils.logging import configure_logger

logger = configure_logger(__file__)

st.set_page_config(page_title="chat-o-sophy", page_icon="ðŸ’­")


PHILOSOPHERS = [
    "Plato",
    "Aristotle",
    "Socrates",
    "Confucius",
    "Immanuel Kant",
    "RenÃ© Descartes",
    "David Hume",
    "John Locke",
    "Friedrich Nietzsche",
    "Thomas Aquinas",
    "Jean-Jacques Rousseau",
    "Baruch Spinoza",
    "Ludwig Wittgenstein",
    "SÃ¸ren Kierkegaard",
    "Voltaire",
    "John Stuart Mill",
    "Karl Marx",
    "George Berkeley",
    "Arthur Schopenhauer",
    "G.W.F. Hegel",
]


@st.cache_resource
def initialize_multi_mode():
    logger.info("Initializing multi mode")
    multi_mode = {
        "header_container": st.empty(),
        "current_choices": [],
    }

    return multi_mode


st.session_state.multi_mode = initialize_multi_mode()


def main():
    logger.info("Running multi mode")

    if api_key_manager := st.session_state.get("api_key_manager"):
        api_key_manager.display()

    with st.session_state.multi_mode["header_container"].container():
        st.title("Multi mode", anchor=False)
        st.caption("Ask a question to several philosophers!")

        st.session_state.multi_mode["current_choices"] = st.multiselect(
            label="Philosophers:",
            placeholder="Choose several philosophers",
            options=PHILOSOPHERS,
            max_selections=5,
            default=None,
            disabled=st.session_state.get("OPENAI_API_KEY") is None,
        )

    if prompt := st.chat_input(
        placeholder="What is your question?",
        disabled=not (
            st.session_state.multi_mode["current_choices"]
            and st.session_state.get("OPENAI_API_KEY")
        ),
    ):
        history = [{"role": "human", "content": prompt}]
        st.chat_message("human").write(prompt)
        for philosopher in st.session_state.multi_mode["current_choices"]:
            st.header(philosopher, divider="gray", anchor=False)
            chatbot = PhilosopherChatbot(philosopher)
            with st.chat_message("ai"):
                with st.spinner(f"{philosopher} is writing..."):
                    answer = chatbot.chat(prompt=prompt)
                history.append({"role": philosopher, "content": answer})

        st.header(
            "Synthesis",
            anchor=False,
            help="Generated by an AI assistant, based on the above answers.",
            divider="gray",
        )
        assistant = AssistantChatbot(history)
        assistant.summarize_responses()
        with st.spinner("Generating summary table..."):
            assistant.summary_table()


if __name__ == "__main__":
    main()
